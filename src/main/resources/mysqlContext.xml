<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 指定spring读取db.properties配置 -->
    <context:property-placeholder location="classpath:db.properties"  />

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.connection.driver_class}"/>
        <property name="url" value="${mysql.connection.url}"/>
        <!-- 数据库用户名 -->
        <property name="username" value="${mysql.connection.username}"/>
        <!-- 密码 -->
        <property name="password" value="${mysql.connection.password}"/>
        <!-- 连接初始值，连接池启动时创建的连接数量的初始值 -->
        <property name="initialSize" value="10"/>
        <!-- 最大空闲值.当经过一个高峰时间后，
        连接池可以慢慢将已经用不到的连接慢慢释放一部分，
        一直减少到maxIdle为止 ，0时无限制  -->
        <property name="maxIdle" value="50"/>
        <!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制 -->
        <property name="maxTotal" value="50"/>
        <!-- 最大等待时间  单位为毫秒-->
        <property name="maxWaitMillis" value="10000"/>
        <!-- 自动提交 -->
        <property name="defaultAutoCommit" value="false"/>
        <!-- 失效检查线程运行时间间隔，如果小于等于0，不会启动检查线程   -->
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <!-- 大于0 ，进行连接空闲时间判断，或为0，对空闲的连接不进行验证；默认30分钟 -->
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
        <!-- 是否自我中断, 默认是 false -->
        <property name="removeAbandonedOnMaintenance" value="true"/>
        <!-- 几秒后会自我中断, removeAbandoned 必须为 true -->
        <property name="removeAbandonedTimeout" value="10"/>
        <!-- 是否记录中断事件, 默认为 false -->
        <property name="logAbandoned" value="true"/>
    </bean>

    <!--<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    &lt;!&ndash; scan for mappers and let them be autowired &ndash;&gt;
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hcmony.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
    </bean>-->

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com.mavendemo.mapper/*Mapper.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mavendemo.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>